import{c as L,b3 as u,j as o,aT as k,r as s,aR as H,b4 as A,b5 as q,b6 as G,aV as V,b7 as W,b8 as Y,aS as B,aW as Q,aQ as v,aU as U,aP as J,v as n,b9 as D}from"./index-C20fHVmm.js";/**
 * @license lucide-react v0.539.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const K=[["path",{d:"M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7",key:"1m0v6g"}],["path",{d:"M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z",key:"ohrbg2"}]],xe=L("square-pen",K);var x="AlertDialog",[X]=G(x,[u]),i=u(),N=e=>{const{__scopeAlertDialog:a,...t}=e,r=i(a);return o.jsx(k,{...r,...t,modal:!0})};N.displayName=x;var Z="AlertDialogTrigger",ee=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(J,{...l,...r,ref:a})});ee.displayName=Z;var ae="AlertDialogPortal",y=e=>{const{__scopeAlertDialog:a,...t}=e,r=i(a);return o.jsx(H,{...r,...t})};y.displayName=ae;var te="AlertDialogOverlay",b=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(U,{...l,...r,ref:a})});b.displayName=te;var c="AlertDialogContent",[oe,re]=X(c),se=Y("AlertDialogContent"),R=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,children:r,...l}=e,g=i(t),p=s.useRef(null),F=A(a,p),f=s.useRef(null);return o.jsx(q,{contentName:c,titleName:_,docsSlug:"alert-dialog",children:o.jsx(oe,{scope:t,cancelRef:f,children:o.jsxs(V,{role:"alertdialog",...g,...l,ref:F,onOpenAutoFocus:W(l.onOpenAutoFocus,d=>{var m;d.preventDefault(),(m=f.current)==null||m.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[o.jsx(se,{children:r}),o.jsx(ie,{contentRef:p})]})})})});R.displayName=c;var _="AlertDialogTitle",h=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(B,{...l,...r,ref:a})});h.displayName=_;var j="AlertDialogDescription",w=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(Q,{...l,...r,ref:a})});w.displayName=j;var le="AlertDialogAction",C=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(v,{...l,...r,ref:a})});C.displayName=le;var E="AlertDialogCancel",S=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,{cancelRef:l}=re(E,t),g=i(t),p=A(a,l);return o.jsx(v,{...g,...r,ref:p})});S.displayName=E;var ie=({contentRef:e})=>{const a=`\`${c}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${c}\` by passing a \`${j}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${c}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var r;document.getElementById((r=e.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(a)},[a,e]),null},ne=N,ce=y,P=b,T=R,O=C,M=S,$=h,I=w;const Ne=ne,de=ce,z=s.forwardRef(({className:e,...a},t)=>o.jsx(P,{className:n("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...a,ref:t}));z.displayName=P.displayName;const pe=s.forwardRef(({className:e,...a},t)=>o.jsxs(de,{children:[o.jsx(z,{}),o.jsx(T,{ref:t,className:n("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...a})]}));pe.displayName=T.displayName;const ge=({className:e,...a})=>o.jsx("div",{className:n("flex flex-col space-y-2 text-center sm:text-left",e),...a});ge.displayName="AlertDialogHeader";const fe=({className:e,...a})=>o.jsx("div",{className:n("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...a});fe.displayName="AlertDialogFooter";const me=s.forwardRef(({className:e,...a},t)=>o.jsx($,{ref:t,className:n("text-lg font-semibold",e),...a}));me.displayName=$.displayName;const ue=s.forwardRef(({className:e,...a},t)=>o.jsx(I,{ref:t,className:n("text-sm text-muted-foreground",e),...a}));ue.displayName=I.displayName;const Ae=s.forwardRef(({className:e,...a},t)=>o.jsx(O,{ref:t,className:n(D(),e),...a}));Ae.displayName=O.displayName;const ve=s.forwardRef(({className:e,...a},t)=>o.jsx(M,{ref:t,className:n(D({variant:"outline"}),"mt-2 sm:mt-0",e),...a}));ve.displayName=M.displayName;export{Ne as A,xe as S,pe as a,ge as b,me as c,ue as d,fe as e,ve as f,Ae as g};
